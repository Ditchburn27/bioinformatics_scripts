library(scater)
library(ggplot2)
library(ggplot.multistats)
library(ggpubr)
all_sce <- readRDS("/Users/leightonditchburn/Documents/Data/Daniel_organoids/sce_organoids.RDS")
df <- lapply(all_sce, function(x) reducedDim(x, "UMAP"))
df <- do.call(rbind, df)
img <- png::readPNG("/Users/leightonditchburn/Documents/Data/Daniel_organoids/background.png")
gene.id <- "MEF2C"
gene.ens <- rownames(all_sce[[1]])[match(gene.id, rowData(all_sce[[1]])$Symbol)]
if(is.na(gene.ens)){
stop("Gene cannot be found!")
}
df$Gene_log <- do.call(c, sapply(all_sce, function(x) as.vector(logcounts(x[gene.ens,]))))
df$Gene <- do.call(c, sapply(all_sce, function(x) as.vector(counts(x[gene.ens,]))))
df$Gene <- as.numeric(df$Gene>0)
p1 <- ggplot(df, aes(x=UMAP1, y=UMAP2)) +
background_image(img) +
stat_summaries_hex(aes(z = Gene_log, fill = stat(mean)),
funs = c('mean'), bins = 100) + scale_fill_viridis_c() +
theme_classic() + scale_x_continuous(limits=c(-6.063561,21.449993)) +
scale_y_continuous(limits=c(-9.861524,15.003452)) +
guides(fill=guide_legend(title=gene.id))
p2 <- ggplot(df, aes(x=UMAP1, y=UMAP2)) +
background_image(img) +
stat_summaries_hex(aes(z = Gene, fill = stat(prop)),
funs = normalize_function_list(list(prop = function(x)
sum(x)/length(x))), bins = 100) + scale_fill_viridis_c() +
theme_classic() + scale_x_continuous(limits=c(-6.063561,21.449993)) +
scale_y_continuous(limits=c(-9.861524,15.003452)) +
guides(fill=guide_legend(title=gene.id))
ggsave(p1, file=paste0("Proportion_", gene_id, "_organoids.png"))
ggsave(p2, file=paste0("Mean_", gene_id, "_organoids.png"))
df <- lapply(all_sce, function(x) reducedDim(x, "UMAP"))
df <- do.call(rbind, df)
img <- png::readPNG("/Users/leightonditchburn/Documents/Data/Daniel_organoids/background.png")
gene.id <- "MEF2C"
gene.ens <- rownames(all_sce[[1]])[match(gene.id, rowData(all_sce[[1]])$Symbol)]
if(is.na(gene.ens)){
stop("Gene cannot be found!")
}
df$Gene_log <- do.call(c, sapply(all_sce, function(x) as.vector(logcounts(x[gene.ens,]))))
df$Gene <- do.call(c, sapply(all_sce, function(x) as.vector(counts(x[gene.ens,]))))
df$Gene <- as.numeric(df$Gene>0)
p1 <- ggplot(df, aes(x=UMAP1, y=UMAP2)) +
background_image(img) +
stat_summaries_hex(aes(z = Gene_log, fill = stat(mean)),
funs = c('mean'), bins = 100) + scale_fill_viridis_c() +
theme_classic() + scale_x_continuous(limits=c(-6.063561,21.449993)) +
scale_y_continuous(limits=c(-9.861524,15.003452)) +
guides(fill=guide_legend(title=gene.id))
p2 <- ggplot(df, aes(x=UMAP1, y=UMAP2)) +
background_image(img) +
stat_summaries_hex(aes(z = Gene, fill = stat(prop)),
funs = normalize_function_list(list(prop = function(x)
sum(x)/length(x))), bins = 100) + scale_fill_viridis_c() +
theme_classic() + scale_x_continuous(limits=c(-6.063561,21.449993)) +
scale_y_continuous(limits=c(-9.861524,15.003452)) +
guides(fill=guide_legend(title=gene.id))
ggsave(p1, file=paste0("Proportion_", gene_id, "_organoids.png"))
ggsave(p2, file=paste0("Mean_", gene_id, "_organoids.png"))
df <- lapply(all_sce, function(x) reducedDim(x, "UMAP"))
df <- do.call(rbind, df)
img <- png::readPNG("/Users/leightonditchburn/Documents/Data/Daniel_organoids/background.png")
gene.id <- "ZEB1"
gene.ens <- rownames(all_sce[[1]])[match(gene.id, rowData(all_sce[[1]])$Symbol)]
if(is.na(gene.ens)){
stop("Gene cannot be found!")
}
df$Gene_log <- do.call(c, sapply(all_sce, function(x) as.vector(logcounts(x[gene.ens,]))))
df$Gene <- do.call(c, sapply(all_sce, function(x) as.vector(counts(x[gene.ens,]))))
df$Gene <- as.numeric(df$Gene>0)
p1 <- ggplot(df, aes(x=UMAP1, y=UMAP2)) +
background_image(img) +
stat_summaries_hex(aes(z = Gene_log, fill = stat(mean)),
funs = c('mean'), bins = 100) + scale_fill_viridis_c() +
theme_classic() + scale_x_continuous(limits=c(-6.063561,21.449993)) +
scale_y_continuous(limits=c(-9.861524,15.003452)) +
guides(fill=guide_legend(title=gene.id))
p2 <- ggplot(df, aes(x=UMAP1, y=UMAP2)) +
background_image(img) +
stat_summaries_hex(aes(z = Gene, fill = stat(prop)),
funs = normalize_function_list(list(prop = function(x)
sum(x)/length(x))), bins = 100) + scale_fill_viridis_c() +
theme_classic() + scale_x_continuous(limits=c(-6.063561,21.449993)) +
scale_y_continuous(limits=c(-9.861524,15.003452)) +
guides(fill=guide_legend(title=gene.id))
ggsave(p1, file=paste0("Proportion_", gene_id, "_organoids.png"))
ggsave(p2, file=paste0("Mean_", gene_id, "_organoids.png"))
df <- lapply(all_sce, function(x) reducedDim(x, "UMAP"))
df <- do.call(rbind, df)
img <- png::readPNG("/Users/leightonditchburn/Documents/Data/Daniel_organoids/background.png")
gene.id <- "KCNH1"
gene.ens <- rownames(all_sce[[1]])[match(gene.id, rowData(all_sce[[1]])$Symbol)]
if(is.na(gene.ens)){
stop("Gene cannot be found!")
}
df$Gene_log <- do.call(c, sapply(all_sce, function(x) as.vector(logcounts(x[gene.ens,]))))
df$Gene <- do.call(c, sapply(all_sce, function(x) as.vector(counts(x[gene.ens,]))))
df$Gene <- as.numeric(df$Gene>0)
p1 <- ggplot(df, aes(x=UMAP1, y=UMAP2)) +
background_image(img) +
stat_summaries_hex(aes(z = Gene_log, fill = stat(mean)),
funs = c('mean'), bins = 100) + scale_fill_viridis_c() +
theme_classic() + scale_x_continuous(limits=c(-6.063561,21.449993)) +
scale_y_continuous(limits=c(-9.861524,15.003452)) +
guides(fill=guide_legend(title=gene.id))
p2 <- ggplot(df, aes(x=UMAP1, y=UMAP2)) +
background_image(img) +
stat_summaries_hex(aes(z = Gene, fill = stat(prop)),
funs = normalize_function_list(list(prop = function(x)
sum(x)/length(x))), bins = 100) + scale_fill_viridis_c() +
theme_classic() + scale_x_continuous(limits=c(-6.063561,21.449993)) +
scale_y_continuous(limits=c(-9.861524,15.003452)) +
guides(fill=guide_legend(title=gene.id))
ggsave(p1, file=paste0("Proportion_", gene_id, "_organoids.png"))
ggsave(p2, file=paste0("Mean_", gene_id, "_organoids.png"))
all_sce <- readRDS("/Users/leightonditchburn/Documents/Data/Daniel_organoids/sce_organoids.RDS")
df <- lapply(all_sce, function(x) reducedDim(x, "UMAP"))
df <- do.call(rbind, df)
img <- png::readPNG("/Users/leightonditchburn/Documents/Data/Daniel_organoids/background.png")
gene.id <- "PBX1"
gene.ens <- rownames(all_sce[[1]])[match(gene.id, rowData(all_sce[[1]])$Symbol)]
if(is.na(gene.ens)){
stop("Gene cannot be found!")
}
df$Gene_log <- do.call(c, sapply(all_sce, function(x) as.vector(logcounts(x[gene.ens,]))))
df$Gene <- do.call(c, sapply(all_sce, function(x) as.vector(counts(x[gene.ens,]))))
df$Gene <- as.numeric(df$Gene>0)
p1 <- ggplot(df, aes(x=UMAP1, y=UMAP2)) +
background_image(img) +
stat_summaries_hex(aes(z = Gene_log, fill = stat(mean)),
funs = c('mean'), bins = 100) + scale_fill_viridis_c() +
theme_classic() + scale_x_continuous(limits=c(-6.063561,21.449993)) +
scale_y_continuous(limits=c(-9.861524,15.003452)) +
guides(fill=guide_legend(title=gene.id))
p2 <- ggplot(df, aes(x=UMAP1, y=UMAP2)) +
background_image(img) +
stat_summaries_hex(aes(z = Gene, fill = stat(prop)),
funs = normalize_function_list(list(prop = function(x)
sum(x)/length(x))), bins = 100) + scale_fill_viridis_c() +
theme_classic() + scale_x_continuous(limits=c(-6.063561,21.449993)) +
scale_y_continuous(limits=c(-9.861524,15.003452)) +
guides(fill=guide_legend(title=gene.id))
library(scater)
library(schex)
sce <- readRDS("/Users/leightonditchburn/Documents/Data/Brain_dev/sce_raw.RDS")
# change the number of nbins to get a better picture
sce <- make_hexbin(sce, nbins = 200,
dimension_reduction = "UMAP", use_dims=c(1,2))
gene_id <-"KCNH1"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
plot_hexbin_feature(sce, type="logcounts", feature=gene_id,
action="mean", xlab="UMAP1", ylab="UMAP2",
title=paste0("Mean of ", gene_id))
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0(gene_id))
gene_id <-"ARHGAP26"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0(gene_id))
library(scater)
library(schex)
sce <- readRDS("/Users/leightonditchburn/Documents/Data/Brain_dev/sce_raw.RDS")
# change the number of nbins to get a better picture
sce <- make_hexbin(sce, nbins = 200,
dimension_reduction = "UMAP", use_dims=c(1,2))
gene_id <-"SMAD3"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
plot_hexbin_feature(sce, type="logcounts", feature=gene_id,
action="mean", xlab="UMAP1", ylab="UMAP2",
title=paste0("Mean of ", gene_id))
gene_id <-"LSAMP"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
plot_hexbin_feature(sce, type="logcounts", feature=gene_id,
action="mean", xlab="UMAP1", ylab="UMAP2",
title=paste0("Mean of ", gene_id))
gene_id <-"ZEB1"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
plot_hexbin_feature(sce, type="logcounts", feature=gene_id,
action="mean", xlab="UMAP1", ylab="UMAP2",
title=paste0("Mean of ", gene_id))
gene_id <-"MEIS2"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
plot_hexbin_feature(sce, type="logcounts", feature=gene_id,
action="mean", xlab="UMAP1", ylab="UMAP2",
title=paste0("Mean of ", gene_id))
gene_id <-"MEF2C"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
plot_hexbin_feature(sce, type="logcounts", feature=gene_id,
action="mean", xlab="UMAP1", ylab="UMAP2",
title=paste0("Mean of ", gene_id))
gene_id <-"RORA"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
plot_hexbin_feature(sce, type="logcounts", feature=gene_id,
action="mean", xlab="UMAP1", ylab="UMAP2",
title=paste0("Mean of ", gene_id))
gene_id <-"PBX3"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
plot_hexbin_feature(sce, type="logcounts", feature=gene_id,
action="mean", xlab="UMAP1", ylab="UMAP2",
title=paste0("Mean of ", gene_id))
gene_id <-"NEUROD6"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
plot_hexbin_feature(sce, type="logcounts", feature=gene_id,
action="mean", xlab="UMAP1", ylab="UMAP2",
title=paste0("Mean of ", gene_id))
gene_id <-"NFATC3"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
plot_hexbin_feature(sce, type="logcounts", feature=gene_id,
action="mean", xlab="UMAP1", ylab="UMAP2",
title=paste0("Mean of ", gene_id))
gene_id <-"PBX1"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
plot_hexbin_feature(sce, type="logcounts", feature=gene_id,
action="mean", xlab="UMAP1", ylab="UMAP2",
title=paste0("Mean of ", gene_id))
gene_id <-"NFIB"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
plot_hexbin_feature(sce, type="logcounts", feature=gene_id,
action="mean", xlab="UMAP1", ylab="UMAP2",
title=paste0("Mean of ", gene_id))
gene_id <-"FOXP2"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
plot_hexbin_feature(sce, type="logcounts", feature=gene_id,
action="mean", xlab="UMAP1", ylab="UMAP2",
title=paste0("Mean of ", gene_id))
gene_id <-"NFIA"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
plot_hexbin_feature(sce, type="logcounts", feature=gene_id,
action="mean", xlab="UMAP1", ylab="UMAP2",
title=paste0("Mean of ", gene_id))
gene_id <-"FOXP2"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
plot_hexbin_feature(sce, type="logcounts", feature=gene_id,
action="mean", xlab="UMAP1", ylab="UMAP2",
title=paste0("Mean of ", gene_id))
gene_id <-"NFIB"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
plot_hexbin_feature(sce, type="logcounts", feature=gene_id,
action="mean", xlab="UMAP1", ylab="UMAP2",
title=paste0("Mean of ", gene_id))
gene_id <-"KLF6"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
plot_hexbin_feature(sce, type="logcounts", feature=gene_id,
action="mean", xlab="UMAP1", ylab="UMAP2",
title=paste0("Mean of ", gene_id))
gene_id <-"GLIS3"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
plot_hexbin_feature(sce, type="logcounts", feature=gene_id,
action="mean", xlab="UMAP1", ylab="UMAP2",
title=paste0("Mean of ", gene_id))
gene_id <-"POU6F2"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
gene_id <-"BCL11A"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
plot_hexbin_feature(sce, type="logcounts", feature=gene_id,
action="mean", xlab="UMAP1", ylab="UMAP2",
title=paste0("Mean of ", gene_id))
gene_id <-"MYCN"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
gene_id <-"POU2F1"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
gene_id <-"PRRX1"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
gene_id <-"IRF2"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
gene_id <-"KLF13"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
gene_id <-"NFIX"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
gene_id <-"MYBL1"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
gene_id <-"MEIS1"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
gene_id <-"RFX3"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
gene_id <-"TGIF1"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
gene_id <-"TFE3"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
gene_id <-"FOXO3"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
gene_id <-"NFATC3"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
gene_id <-"TCF4"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
gene_id <-"POU3F2"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
gene_id <-"FOXP1"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
plot_hexbin_feature(sce, type="logcounts", feature=gene_id,
action="mean", xlab="UMAP1", ylab="UMAP2",
title=paste0("Mean of ", gene_id))
gene_id <-"NR3C1"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
gene_id <-"ESRRG"
plot_hexbin_feature(sce, type="counts", feature=gene_id,
action="prop_0", xlab="UMAP1", ylab="UMAP2",
title=paste0("Prop of ", gene_id))
